{"version":3,"file":"app.65da8b2b4275710bfd15.js","mappings":"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","sources":["webpack://appjs-test/./src/app.js","webpack://appjs-test/./node_modules/@kurkle/color/dist/color.esm.js","webpack://appjs-test/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://appjs-test/./node_modules/chart.js/dist/chart.js","webpack://appjs-test/./node_modules/chart.js/auto/auto.js","webpack://appjs-test/./src/index.js"],"sourcesContent":["export default class App {\n    constructor(){\n        this.ctx = document.getElementById('pingChart').getContext('2d');\n        this.container = document.getElementById('container');\n        this.chart;\n    }\n\n    get = () => {\n        fetch('/ping_data')\n        .then(response => response.json())\n        .then(data => {\n            this.chart.data.labels = Array.from(Array(data.length).keys());\n            this.chart.data.datasets[0].data = data;\n            this.chart.update();\n        });\n    }\n\n    onFullScreen = (cb) => {\n        document.addEventListener('keydown', cb);\n    }\n\n    FullScreen = (document) => {\n        if (document.requestFullscreen) {\n            document.requestFullscreen();\n        } else if (document.webkitRequestFullscreen) { /* Safari */\n            document.webkitRequestFullscreen();\n        } else if (document.msRequestFullscreen) { /* IE11 */\n            document.msRequestFullscreen();\n        }\n    }\n\n    run = (Chart) => {\n        this.onFullScreen((e) => {\n            if(e.key === 'f'){\n                this.FullScreen(this.container);\n            }\n        });\n\n        this.chart = new Chart(this.ctx, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [{\n                    label: 'Latency',\n                    data: [],\n                    borderColor: '#7494ec',\n                    // backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                    backgroundColor: '#7494ec',\n                    borderWidth: 3,\n                    fill: false\n                }]\n            },\n            options: {\n                scales: {\n                    x: {\n                        type: 'linear',\n                        position: 'bottom'\n                    },\n                    y: {\n                        beginAtZero: false\n                    }\n                }\n            }\n        });\n\n        this.get();\n        \n        setInterval(() => {\n            this.get();\n        }, 2000);\n    }\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.2\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.2\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points.slice(Math.max(this._drawStart - 1, 0), this._drawStart + this._drawCount);\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.2\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import App from './app';\nimport Chart from 'chart.js/auto';\n\nconst app = new App();\n\napp.run(Chart);"],"names":["App","_createClass","_this","_classCallCheck","_defineProperty","fetch","then","response","json","data","chart","labels","Array","from","length","keys","datasets","update","cb","document","addEventListener","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","Chart","onFullScreen","e","key","FullScreen","container","ctx","type","label","borderColor","backgroundColor","borderWidth","fill","options","scales","x","position","y","beginAtZero","get","setInterval","this","getElementById","getContext","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","r","g","hueValue","calln","isArray","map","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","len","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","run"],"sourceRoot":""}